{"ast":null,"code":"var _jsxFileName = \"D:\\\\Helena\\\\IT\\\\React\\\\ReactKurzComplete\\\\forms\\\\01-starting-project\\\\01-starting-project\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInputMine from \"../hooks/use-input-mine\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const {\n    enteredValue: enteredFirstName,\n    valueIsValid: firstNameIsValid,\n    inputValueHasErrors: firstNameHasErrors,\n    valueInputChangeHandler: firstNameChangeHandler,\n    valueInputBlurHandler: firstNameBlurHandler,\n    resetInput: resetFirstName\n  } = useInputMine(validateFirstName);\n\n  function validateFirstName(value) {\n    return value.trim() !== \"\";\n  }\n\n  const {\n    enteredValue: enteredLastName,\n    valueIsValid: lastNameIsValid,\n    inputValueHasErrors: lastNameHasErrors,\n    valueInputChangeHandler: lastNameChangeHandler,\n    valueInputBlurHandler: lastNameBlurHandler,\n    resetInput: resetLastName\n  } = useInputMine(value => value.trim() !== \"\");\n  const {\n    enteredValue: enteredEmail,\n    valueIsValid: emailIsValid,\n    inputValueHasErrors: emailHasErrors,\n    valueInputChangeHandler: emailChangeHandler,\n    valueInputBlurHandler: emailBlurHandler,\n    resetInput: resetEmail\n  } = useInputMine(validateEmail);\n\n  function validateEmail(value) {\n    return value.trim() !== \"\" && value.includes(\"@\");\n  }\n\n  useEffect(() => {\n    if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [firstNameIsValid, lastNameIsValid, emailIsValid]);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      //if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }\n\n  const firstNameClasses = firstNameHasErrors ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameHasErrors ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasErrors ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: firstNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredFirstName,\n        onChange: firstNameChangeHandler,\n        onBlur: firstNameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), firstNameHasErrors && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"First Name must not be empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: lastNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"lastName\",\n        value: enteredLastName,\n        onChange: lastNameChangeHandler,\n        onBlur: lastNameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), lastNameHasErrors && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Last Name must not be empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), emailHasErrors && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email must not be empty and has to include @.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"jaPWVsZMXpFPTr/+eVCql7KlJpg=\", false, function () {\n  return [useInputMine, useInputMine, useInputMine];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/forms/01-starting-project/01-starting-project/src/components/BasicForm.js"],"names":["useInputMine","useState","useEffect","BasicForm","props","formIsValid","setFormIsValid","enteredValue","enteredFirstName","valueIsValid","firstNameIsValid","inputValueHasErrors","firstNameHasErrors","valueInputChangeHandler","firstNameChangeHandler","valueInputBlurHandler","firstNameBlurHandler","resetInput","resetFirstName","validateFirstName","value","trim","enteredLastName","lastNameIsValid","lastNameHasErrors","lastNameChangeHandler","lastNameBlurHandler","resetLastName","enteredEmail","emailIsValid","emailHasErrors","emailChangeHandler","emailBlurHandler","resetEmail","validateEmail","includes","submitFormHandler","event","preventDefault","firstNameClasses","lastNameClasses","emailClasses"],"mappings":"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","sourcesContent":["import useInputMine from \"../hooks/use-input-mine\";\nimport { useState, useEffect } from \"react\";\n\nconst BasicForm = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const {\n    enteredValue: enteredFirstName,\n    valueIsValid: firstNameIsValid,\n    inputValueHasErrors: firstNameHasErrors,\n    valueInputChangeHandler: firstNameChangeHandler,\n    valueInputBlurHandler: firstNameBlurHandler,\n    resetInput: resetFirstName,\n  } = useInputMine(validateFirstName);\n\n  function validateFirstName(value) {\n    return value.trim() !== \"\";\n  }\n\n  const {\n    enteredValue: enteredLastName,\n    valueIsValid: lastNameIsValid,\n    inputValueHasErrors: lastNameHasErrors,\n    valueInputChangeHandler: lastNameChangeHandler,\n    valueInputBlurHandler: lastNameBlurHandler,\n    resetInput: resetLastName,\n  } = useInputMine((value) => value.trim() !== \"\");\n\n  const {\n    enteredValue: enteredEmail,\n    valueIsValid: emailIsValid,\n    inputValueHasErrors: emailHasErrors,\n    valueInputChangeHandler: emailChangeHandler,\n    valueInputBlurHandler: emailBlurHandler,\n    resetInput: resetEmail,\n  } = useInputMine(validateEmail);\n\n  function validateEmail(value) {\n    return value.trim() !== \"\" && value.includes(\"@\");\n  }\n\n  useEffect(() => {\n    if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [firstNameIsValid, lastNameIsValid, emailIsValid]);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    if (!formIsValid) {\n    //if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }\n\n  const firstNameClasses = firstNameHasErrors\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameClasses = lastNameHasErrors\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailClasses = emailHasErrors ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={submitFormHandler}>\n      <div className={firstNameClasses}>\n        <label htmlFor=\"name\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredFirstName}\n          onChange={firstNameChangeHandler}\n          onBlur={firstNameBlurHandler}\n        />\n      </div>\n      {firstNameHasErrors && (\n        <p className=\"error-text\">First Name must not be empty.</p>\n      )}\n      <div className={lastNameClasses}>\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          type=\"text\"\n          id=\"lastName\"\n          value={enteredLastName}\n          onChange={lastNameChangeHandler}\n          onBlur={lastNameBlurHandler}\n        />\n      </div>\n      {lastNameHasErrors && (\n        <p className=\"error-text\">Last Name must not be empty.</p>\n      )}\n      <div className={emailClasses}>\n        <label htmlFor=\"lastName\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmail}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n      </div>\n      {emailHasErrors && (\n        <p className=\"error-text\">\n          Email must not be empty and has to include @.\n        </p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}