{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nfunction useInput(validateValue) {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasErrors = !valueIsValid && isTouched;\n\n  function valueInputChange(event) {\n    setEnteredValue(event.target.value);\n  }\n\n  function valueInputBlurHandler(event) {\n    setIsTouched(true);\n  }\n\n  return {\n    value: enteredValue,\n    hasErrors,\n    // slo by to zapsat jako hasErrors:hasErrors, ale pomoci moderniho JS to lze zapsat i zkracene\n    valueInputChange,\n    valueInputBlurHandler\n  };\n}\n\n_s(useInput, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\n\nexport default useInput;","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/forms/01-starting-project/01-starting-project/src/hooks/use-input.js"],"names":["useState","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasErrors","valueInputChange","event","target","value","valueInputBlurHandler"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AAAA;;AAC/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,SAAS,GAAG,CAACD,YAAD,IAAiBF,SAAnC;;AAEA,WAASI,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD;;AAED,WAASC,qBAAT,CAA+BH,KAA/B,EAAsC;AACpCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,SAAQ;AACRM,IAAAA,KAAK,EAAET,YADC;AAERK,IAAAA,SAFQ;AAEG;AACXC,IAAAA,gBAHQ;AAIRI,IAAAA;AAJQ,GAAR;AAOD;;GAtBQZ,Q;;AAwBT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useInput(validateValue) {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  \r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasErrors = !valueIsValid && isTouched;\r\n\r\n  function valueInputChange(event) {\r\n    setEnteredValue(event.target.value);\r\n  }\r\n\r\n  function valueInputBlurHandler(event) {\r\n    setIsTouched(true);\r\n  }\r\n\r\n  return ({\r\n  value: enteredValue,\r\n  hasErrors, // slo by to zapsat jako hasErrors:hasErrors, ale pomoci moderniho JS to lze zapsat i zkracene\r\n  valueInputChange,\r\n  valueInputBlurHandler,\r\n  })\r\n  ;\r\n}\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}