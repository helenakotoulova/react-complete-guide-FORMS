{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nfunction useInputMine(validateValue) {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const inputValueHasErrors = !valueIsValid && isTouched;\n\n  function valueInputChangeHandler(event) {\n    setEnteredValue(event.target.value);\n  }\n\n  function valueInputBlurHandler() {\n    setIsTouched(true);\n  }\n\n  function resetInput() {\n    setIsTouched(false);\n    setEnteredValue(\"\");\n  }\n\n  return {\n    enteredValue: enteredValue,\n    valueIsValid,\n    inputValueHasErrors,\n    valueInputChangeHandler,\n    valueInputBlurHandler,\n    resetInput\n  };\n}\n\n_s(useInputMine, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\n\nexport default useInputMine;","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/forms/01-starting-project/01-starting-project/src/hooks/use-input-mine.js"],"names":["useState","useInputMine","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","inputValueHasErrors","valueInputChangeHandler","event","target","value","valueInputBlurHandler","resetInput"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,SAASC,YAAT,CAAsBC,aAAtB,EAAqC;AAAA;;AACnC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,mBAAmB,GAAG,CAACD,YAAD,IAAiBF,SAA7C;;AAEA,WAASI,uBAAT,CAAiCC,KAAjC,EAAwC;AACtCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD;;AAED,WAASC,qBAAT,GAAiC;AAC/BP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASQ,UAAT,GAAsB;AACpBR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD;;AAED,SAAO;AACLD,IAAAA,YAAY,EAAEA,YADT;AAELI,IAAAA,YAFK;AAGLC,IAAAA,mBAHK;AAILC,IAAAA,uBAJK;AAKLI,IAAAA,qBALK;AAMLC,IAAAA;AANK,GAAP;AAQD;;GA5BQb,Y;;AA8BT,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useInputMine(validateValue) {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const inputValueHasErrors = !valueIsValid && isTouched;\r\n\r\n  function valueInputChangeHandler(event) {\r\n    setEnteredValue(event.target.value);\r\n  }\r\n\r\n  function valueInputBlurHandler() {\r\n    setIsTouched(true);\r\n  }\r\n\r\n  function resetInput() {\r\n    setIsTouched(false);\r\n    setEnteredValue(\"\");\r\n  }\r\n\r\n  return {\r\n    enteredValue: enteredValue,\r\n    valueIsValid,\r\n    inputValueHasErrors,\r\n    valueInputChangeHandler,\r\n    valueInputBlurHandler,\r\n    resetInput,\r\n  };\r\n}\r\n\r\nexport default useInputMine;\r\n"]},"metadata":{},"sourceType":"module"}